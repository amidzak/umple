use UmpleNotice.ump;
external interface ILang{}

class JavaDistributedTemplates {
    depend cruise.umple.compiler.*;
    depend cruise.umple.util.*;
    depend java.util.*;
    depend cruise.umple.parser.Position;

    // Add a newline to the end of the input
    private void appendln(StringBuilder buffer, String input, Object... variables)
    {
        append(buffer, input + "\n", variables);
    }

    // This method will be used to append formatted strings
    // i.e. format("Hello {0} {1}", "andrew","forward");
    private void append(StringBuilder buffer, String input, Object... variables)
    {
        buffer.append(StringFormatter.format(input,variables));
    }

    emit getproxyReadObjectCode(String remoteName, String packageName,String interfaceName)(ProxyreadObjectCode);


    ProxyreadObjectCode <<!
      public  String remoteUrl;
      public  String remoteHashCode;
      public  String remotePort;
      private void readObject(java.io.ObjectInputStream in) throws Exception
      {
        try
        {
          in.defaultReadObject();
        }
        catch(Exception e)
        {
          throw e;
        }
      
      boolean success = false;
      while (!success) {        
      try 
      {
      URL url = new URL(remoteUrl+":"+remotePort+"/<<=remoteName>>"+remoteHashCode+"?wsdl");
      QName qname = new QName("http://<<=packageName>>/","<<=remoteName>>Service");
      Service service = Service.create(url, qname);
      realObject=service.getPort(<<=interfaceName>>.class);

        success = true;
      } 
        catch (Exception e) 
        {
          System.err.println("Client exception: " + e.toString());
          e.printStackTrace();
        }
      }
    }
 !>>
}
